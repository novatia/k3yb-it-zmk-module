#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
    };

    kscan0: kscan_composite {
        compatible = "zmk,kscan-composite";
        rows = <7>;
        columns = <16>;
		
        // Include the matrix GPIO driver
        matrix {
            kscan = <&kscan1>;
        };

        // Include the demux GPIO driver...
        demux {
            kscan = <&kscan2>;
        };
    };

    kscan1: kscan_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        diode-direction = "col2row";
        
        col-gpios = <&pro_micro 10 GPIO_ACTIVE_HIGH>
                  , <&pro_micro 16 GPIO_ACTIVE_HIGH>
                  , <&pro_micro 14 GPIO_ACTIVE_HIGH>
                  , <&pro_micro 15 GPIO_ACTIVE_HIGH>;

        row-gpios =  <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
                   , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
                   , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
                   , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
                   , <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)> 
                   ;
    };

    kscan2: kscan_demux {
        compatible = "zmk,kscan-gpio-demux";
        polling-interval-msec = <200>;

        input-gpios =  <&pro_micro 18 GPIO_ACTIVE_HIGH>
                     , <&pro_micro 19 GPIO_ACTIVE_HIGH>
                     , <&pro_micro 20 GPIO_ACTIVE_HIGH>
                     , <&pro_micro 21 GPIO_ACTIVE_HIGH>;

        output-gpios =  <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
                      , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
                      , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
                      , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
                      , <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
                      , <&pro_micro 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)> 
                      , <&pro_micro 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
                      ;
    };
	
    keypad_transform: matrix_transform_1 {
        compatible = "zmk,matrix-transform";
        rows = <5>;
        columns = <4>;
		//     1   2   3   4
        //   ┌───┬───┬───┬───┐
        // 1 │NUM│ / │ * │ - │
        //   ├───┼───┼───┼───┤
        // 2 │ 7 │ 8 │ 9 │ + │
        //   ├───┼───┼───┼───┤
        // 3 │ 4 │ 5 │ 6 │   │
        //   ├───┼───┼───┼───┤
        // 4 │ 1 │ 2 │ 3 │   │
        //   ├───┼───┼───┼───┤
        // 5 │ 0 │   │ . │RET│
        //   └───┴───┴───┴───┘
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3)
              RC(1,0) RC(1,1) RC(1,2) RC(1,3)
                RC(2,0) RC(2,1) RC(2,2)
                  RC(3,0) RC(3,1) RC(3,2) 
                    RC(4,0)         RC(4,2) RC(4,3)
        >;
		
    };
	
	demux_transform: matrix_transform_2 {
         compatible = "zmk,matrix-transform";
         rows = <7>;
         columns = <16>;
		//      1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16
        //    ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┐
        //  1 │ESC│ F1│ F2│ F3│ F4│ F5│ F6│ F7│ F8│ F9│F10│F11│F12│PRN│BSC│ PS│
        //    ├───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┤
        //  2 │ ~ │ 1 │ 2 │ 3 │ 4 │ 5 │ 6 │ 7 │ 8 │ 9 │ 0 │ - │ = │BKS│   │   │
        //    ├───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┤
        //  3 │TAB│ q │ w │ e │ r │ t │ y │ u │ i │ o │ p │ [ │ ] │INS│ UP│PGU│
        //    ├───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┤
        //  4 │CAP│ a │ s │ d │ f │ g │ h │ j │ k │ l │ ; │ ' │ENT│DEL│END│PGD│
        //    ├───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┤
        //  5 │SHL│ \ │ z │ x │ c │ v │ b │ n │ m │ , │ . │ / │SHR│   │   │ UP│
        //    ├───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┤
        //  6 │LCT│WIN│LAT│ SP│   │   │   │   │   │   │RIG│   │ u │   │   │   │
        //    ├───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┼───┤
        //  7 │   │   │   │   │   │   │   │   │RAT│ FN│MNU│RCT│   │LEF│DOW│   │
        //    └───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┘
         map = <
             RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14) RC(0,15)
             RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
             RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13) RC(2,14) RC(2,15)
             RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13) RC(3,14) RC(3,15)
             RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11) RC(4,12)                   RC(4,15)
             RC(5,0) RC(5,1) RC(5,2) RC(5,3)                                                          RC(5,11)          RC(5,13)
                                                                             RC(6,8) RC(6,9) RC(6,10) RC(6,11)          RC(6,13) RC(6,14)
         >;
        
    };
};
